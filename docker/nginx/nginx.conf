user nginx;
worker_processes 1;

events {
	worker_connections 1024;
}


http {
	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;
	
	upstream backend_user {
		server backend_user:8001;
	}
	# upstream backend_tournament {
	# 	server backend_tournament:8002;
	# }

	# Redirect HTTP to HTTPS
	server {
		listen 80;
		server_name localhost;

		return 301 https://$host$request_uri;
	}
	# Server block for HTTPs
	server {
		listen 3042 ssl;
		server_name localhost;

		root /usr/share/nginx/frontend/;
		index index.html;

		ssl_certificate /etc/nginx/certs/server.crt;
		ssl_certificate_key /etc/nginx/certs/server.key;

		ssl_protocols TLSv1.2 TLSv1.3;
		
		# Serve static files from frontend
		location / {
			try_files $uri $uri/ /index.html;
		}

		# Proxy for user service
		location /api/ {
			proxy_pass http://backend_user;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /api-tournament/ {
			proxy_pass http://backend_tournament:8002;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
		
		# para cuando se sirvan imagenes desde el servidor que al buscarlos no redirija a index.html
		# location ~* \.(?:css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
		# 	expires 0;
		# 	add_header Cache-Control "no-cache, no-store, must-revalidate";
		# 	try_files $uri =404;
		# Serve media files from users
        location /media/ {
            alias /app/media/;  # Ajusta esta ruta según la configuración de tu contenedor
            access_log off;
            expires 0;
        }

		location /ws/ {
			proxy_pass http://backend_user;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		error_page 404 /index.html;
	}
}
